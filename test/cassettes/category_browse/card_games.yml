---
http_interactions:
- request:
    method: get
    uri: https://awis.us-west-1.amazonaws.com/api?Action=CategoryBrowse&Descriptions=True&Path=Top/Games/Card_Games&ResponseGroup=Categories,LanguageCategories,LetterBars,RelatedCategories
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Content-Type:
      - application/xml
      Accept:
      - application/xml
      User-Agent:
      - Ruby alexa gem v0.7.0
      Host:
      - awis.us-west-1.amazonaws.com
      X-Amz-Date:
      - 20180505T215831Z
      X-Amz-Content-Sha256:
      - e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      Authorization:
      - AWS4-HMAC-SHA256 Credential=<FILTERED>/20180505/us-west-1/awis/aws4_request,
        SignedHeaders=accept;content-type;host;user-agent;x-amz-content-sha256;x-amz-date,
        Signature=4e21eb5dc5e14f5c73de02a9d1f60e806f6df3d8515347188aa2fdde16232de3
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/xml
      Content-Length:
      - '28436'
      Connection:
      - keep-alive
      Date:
      - Sat, 05 May 2018 21:58:32 GMT
      X-Amzn-Requestid:
      - 734264c0-50af-11e8-8970-77be46579566
      X-Amz-Apigw-Id:
      - GbtZOFz8yK4Fecg=
      X-Amzn-Trace-Id:
      - Root=1-5aee2907-d575ab4ff00b79cec9ee42d5
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 23082ff4de65f70078e091bc7cd0cf24.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - slPXxY-HJ0LZlwlSoJZDccguMe5Y_H4_sEP58SDpVaQE2FJNSjmFGA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiA/Pgo8YXdzOkNhdGVnb3J5QnJvd3NlUmVzcG9uc2UgeG1sbnM6YXdzPSJodHRwOi8vYXdpcy5hbWF6b25hd3MuY29tL2RvYy8yMDA1LTEwLTA1Ij4KICA8YXdzOlJlc3BvbnNlIHhtbG5zOmF3cz0iaHR0cDovL2F3aXMuYW1hem9uYXdzLmNvbS9kb2MvMjAwNS0wNy0xMSI+CiAgICA8YXdzOk9wZXJhdGlvblJlcXVlc3Q+CiAgICAgIDxhd3M6UmVxdWVzdElkPjczNDMyODcxLTUwYWYtMTFlOC1hMmVmLWFmNDZjMTk5MTVjYzwvYXdzOlJlcXVlc3RJZD4KICAgIDwvYXdzOk9wZXJhdGlvblJlcXVlc3Q+CiAgICA8YXdzOkNhdGVnb3J5QnJvd3NlUmVzdWx0PgogICAgICA8YXdzOkFsZXhhPgogICAgICAgIDxhd3M6UmVxdWVzdD4KICAgICAgICAgIDxhd3M6QXJndW1lbnRzPgogICAgICAgICAgICA8YXdzOkFyZ3VtZW50PgogICAgICAgICAgICAgIDxhd3M6TmFtZT5wYXRoPC9hd3M6TmFtZT4KICAgICAgICAgICAgICA8YXdzOlZhbHVlPlRvcC9HYW1lcy9DYXJkX0dhbWVzPC9hd3M6VmFsdWU+CiAgICAgICAgICAgIDwvYXdzOkFyZ3VtZW50PgogICAgICAgICAgICA8YXdzOkFyZ3VtZW50PgogICAgICAgICAgICAgIDxhd3M6TmFtZT5kZXNjcmlwdGlvbnM8L2F3czpOYW1lPgogICAgICAgICAgICAgIDxhd3M6VmFsdWU+VHJ1ZTwvYXdzOlZhbHVlPgogICAgICAgICAgICA8L2F3czpBcmd1bWVudD4KICAgICAgICAgICAgPGF3czpBcmd1bWVudD4KICAgICAgICAgICAgICA8YXdzOk5hbWU+cmVzcG9uc2Vncm91cDwvYXdzOk5hbWU+CiAgICAgICAgICAgICAgPGF3czpWYWx1ZT5DYXRlZ29yaWVzLExhbmd1YWdlQ2F0ZWdvcmllcyxMZXR0ZXJCYXJzLFJlbGF0ZWRDYXRlZ29yaWVzPC9hd3M6VmFsdWU+CiAgICAgICAgICAgIDwvYXdzOkFyZ3VtZW50PgogICAgICAgICAgPC9hd3M6QXJndW1lbnRzPgogICAgICAgIDwvYXdzOlJlcXVlc3Q+CiAgICAgICAgPGF3czpDYXRlZ29yeUJyb3dzZT4KICAgICAgICAgIDxhd3M6Q2F0ZWdvcmllcz4KICAgICAgICAgICAgPGF3czpDYXRlZ29yeT4KICAgICAgICAgICAgICA8YXdzOlBhdGg+VG9wL0dhbWVzL0NhcmRfR2FtZXMvQ29tYmluaW5nPC9hd3M6UGF0aD4KICAgICAgICAgICAgICA8YXdzOlRpdGxlPkNvbWJpbmluZzwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD44PC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjM2PC9hd3M6VG90YWxMaXN0aW5nQ291bnQ+CiAgICAgICAgICAgICAgPGF3czpEZXNjcmlwdGlvbj5TaXRlcyBhYm91dCBjYXJkIGdhbWVzIGluIHdoZXJlIHdpbm5pbmcsIG9yIHNjb3JpbmcgcG9pbnRzLCBpbnZvbHZlcyBjb21iaW5pbmcgY2FyZHMgaW4gdmFyaW91cyB3YXlzLjwvYXdzOkRlc2NyaXB0aW9uPgogICAgICAgICAgICA8L2F3czpDYXRlZ29yeT4KICAgICAgICAgICAgPGF3czpDYXRlZ29yeT4KICAgICAgICAgICAgICA8YXdzOlBhdGg+VG9wL0dhbWVzL0NhcmRfR2FtZXMvQ29tcGFyaW5nPC9hd3M6UGF0aD4KICAgICAgICAgICAgICA8YXdzOlRpdGxlPkNvbXBhcmluZzwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4xPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjI8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgICA8YXdzOkRlc2NyaXB0aW9uPlNpdGVzIGRldm90ZWQgdG8gY2FyZCBnYW1lcyB3aGVyZSB3aW5uaW5nIG9yIGxvc2luZyBkZXBlbmRzIG9uIGNvbXBhcmluZyBvbmUgY2FyZCBvciBjb21iaW5hdGlvbnMgb2YgY2FyZHMgd2l0aCBhbm90aGVyLjwvYXdzOkRlc2NyaXB0aW9uPgogICAgICAgICAgICA8L2F3czpDYXRlZ29yeT4KICAgICAgICAgICAgPGF3czpDYXRlZ29yeT4KICAgICAgICAgICAgICA8YXdzOlBhdGg+VG9wL0dhbWVzL0NhcmRfR2FtZXMvRGV2ZWxvcGVyc19hbmRfUHVibGlzaGVyczwvYXdzOlBhdGg+CiAgICAgICAgICAgICAgPGF3czpUaXRsZT5EZXZlbG9wZXJzIGFuZCBQdWJsaXNoZXJzPC9hd3M6VGl0bGU+CiAgICAgICAgICAgICAgPGF3czpTdWJDYXRlZ29yeUNvdW50PjA8L2F3czpTdWJDYXRlZ29yeUNvdW50PgogICAgICAgICAgICAgIDxhd3M6VG90YWxMaXN0aW5nQ291bnQ+ODwvYXdzOlRvdGFsTGlzdGluZ0NvdW50PgogICAgICAgICAgICAgIDxhd3M6RGVzY3JpcHRpb24+U2l0ZXMgZGV2b3RlZCB0byBkZXZlbG9wZXJzIGFuZCBwdWJsaXNoZXJzIG9mIHNwZWNpYWwgZGVjayBwcm9wcmlldHkgY2FyZCBnYW1lcywgYXMgd2VsbCBhcyBpbnZlbnRvcnMgb2YgZmlmdHktdHdvIGNhcmQgc3RhbmRhcmQgZGVjayBnYW1lcy48L2F3czpEZXNjcmlwdGlvbj4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL0d1aWRlczwvYXdzOlBhdGg+CiAgICAgICAgICAgICAgPGF3czpUaXRsZT5HdWlkZXM8L2F3czpUaXRsZT4KICAgICAgICAgICAgICA8YXdzOlN1YkNhdGVnb3J5Q291bnQ+MDwvYXdzOlN1YkNhdGVnb3J5Q291bnQ+CiAgICAgICAgICAgICAgPGF3czpUb3RhbExpc3RpbmdDb3VudD40MDwvYXdzOlRvdGFsTGlzdGluZ0NvdW50PgogICAgICAgICAgICAgIDxhd3M6RGVzY3JpcHRpb24+V2Vic2l0ZXMgb2ZmZXJpbmcgcnVsZXMsIHN0cmF0ZWdpZXMsIGFuZCBpbmZvcm1hdGlvbiBmb3IgbXVsdGlwbGUgY2FyZCBnYW1lcy48L2F3czpEZXNjcmlwdGlvbj4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL1NoZWRkaW5nX2FuZF9BY2N1bXVsYXRpbmc8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+U2hlZGRpbmcgYW5kIEFjY3VtdWxhdGluZzwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD44PC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjIxPC9hd3M6VG90YWxMaXN0aW5nQ291bnQ+CiAgICAgICAgICAgICAgPGF3czpEZXNjcmlwdGlvbj5TaXRlcyBkZXZvdGVkIHRvIGNhcmQgZ2FtZXMgd2hlcmUgdGhlIG9iamVjdGl2ZSBpcyBlaXRoZXIgdG8gZ2V0IHJpZCBvZiBhbGwgeW91ciBjYXJkcyBvciBhY2N1bXVsYXRlIGFsbCB0aGUgY2FyZHMuPC9hd3M6RGVzY3JpcHRpb24+CiAgICAgICAgICAgIDwvYXdzOkNhdGVnb3J5PgogICAgICAgICAgICA8YXdzOkNhdGVnb3J5PgogICAgICAgICAgICAgIDxhd3M6UGF0aD5Ub3AvR2FtZXMvQ2FyZF9HYW1lcy9TcGVjaWFsX0RlY2tzPC9hd3M6UGF0aD4KICAgICAgICAgICAgICA8YXdzOlRpdGxlPlNwZWNpYWwgRGVja3M8L2F3czpUaXRsZT4KICAgICAgICAgICAgICA8YXdzOlN1YkNhdGVnb3J5Q291bnQ+MTM4PC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjE3MTwvYXdzOlRvdGFsTGlzdGluZ0NvdW50PgogICAgICAgICAgICAgIDxhd3M6RGVzY3JpcHRpb24+VmFyaW91cyBjYXJkIGdhbWVzIHdoaWNoIHJlcXVpcmUgYSBzcGVjaWFsIHBhY2sgb2YgY2FyZHMgb2Z0ZW4gcHJvbW90ZWQgYW5kIHNvbGQgYnkgYSBwYXJ0aWN1bGFyIG1hbnVmYWN0dXJlci4gRWFjaCBnYW1lIGlzIGNhdGVnb3JpemVkIGluIGEgc3ViLWRpcmVjdG9yeSwgaWYgbm90IHRoZSBzaXRlIGRlc2NyaWJlcyBtb3JlIHRoYW4gb25lIGNhcmQgZ2FtZS48L2F3czpEZXNjcmlwdGlvbj4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL1N0YW5kYXJkX0RlY2tzPC9hd3M6UGF0aD4KICAgICAgICAgICAgICA8YXdzOlRpdGxlPlN0YW5kYXJkIERlY2tzPC9hd3M6VGl0bGU+CiAgICAgICAgICAgICAgPGF3czpTdWJDYXRlZ29yeUNvdW50PjA8L2F3czpTdWJDYXRlZ29yeUNvdW50PgogICAgICAgICAgICAgIDxhd3M6VG90YWxMaXN0aW5nQ291bnQ+MDwvYXdzOlRvdGFsTGlzdGluZ0NvdW50PgogICAgICAgICAgICA8L2F3czpDYXRlZ29yeT4KICAgICAgICAgICAgPGF3czpDYXRlZ29yeT4KICAgICAgICAgICAgICA8YXdzOlBhdGg+VG9wL0dhbWVzL0NhcmRfR2FtZXMvVHJpY2tfQ2FwdHVyaW5nPC9hd3M6UGF0aD4KICAgICAgICAgICAgICA8YXdzOlRpdGxlPlRyaWNrIENhcHR1cmluZzwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4xNTwvYXdzOlN1YkNhdGVnb3J5Q291bnQ+CiAgICAgICAgICAgICAgPGF3czpUb3RhbExpc3RpbmdDb3VudD41MjE8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgICA8YXdzOkRlc2NyaXB0aW9uPlRoZXNlIGFyZSB0cmljay10YWtpbmcgZ2FtZXMgaW4gd2hpY2ggdGhlIGFpbSBpcyB0byBjYXB0dXJlIGNhcmRzIG9yIGF2b2lkaW5nIGNhcHR1cmluZyBjYXJkcy4gSXQgbWF5IGJlIHRoZSBxdWFudGl0eSBvZiBjYXJkcyBjYXB0dXJlZCB0aGF0IGlzIGltcG9ydGFudCwgb3IgaXQgbWF5IGJlIHRoYXQgc29tZSBjYXJkcyBhcmUgbW9yZSB2YWx1YWJsZSB0aGFuIG90aGVycy48L2F3czpEZXNjcmlwdGlvbj4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICA8L2F3czpDYXRlZ29yaWVzPgogICAgICAgICAgPGF3czpMYW5ndWFnZUNhdGVnb3JpZXM+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9Xb3JsZC9DYXRhbMOgL0pvY3MvRGVfY2FydGVzPC9hd3M6UGF0aD4KICAgICAgICAgICAgICA8YXdzOlRpdGxlPkNhdGFsYW48L2F3czpUaXRsZT4KICAgICAgICAgICAgICA8YXdzOlN1YkNhdGVnb3J5Q291bnQ+MzwvYXdzOlN1YkNhdGVnb3J5Q291bnQ+CiAgICAgICAgICAgICAgPGF3czpUb3RhbExpc3RpbmdDb3VudD43PC9hd3M6VG90YWxMaXN0aW5nQ291bnQ+CiAgICAgICAgICAgICAgPGF3czpEZXNjcmlwdGlvbj5NYW51YWxzLCBpbnN0cnVjY2lvbnMsIHByb2dyYW1lcyBkZSBxdWFsc2V2b2wgam9jIGRlIGNhcnRlcy48L2F3czpEZXNjcmlwdGlvbj4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9Xb3JsZC9DaGluZXNlX1NpbXBsaWZpZWRfQ04v5ri45oiPL+eJjOexu+a4uOaIjzwvYXdzOlBhdGg+CiAgICAgICAgICAgICAgPGF3czpUaXRsZT5DaGluZXNlIFNpbXBsaWZpZWQ8L2F3czpUaXRsZT4KICAgICAgICAgICAgICA8YXdzOlN1YkNhdGVnb3J5Q291bnQ+MDwvYXdzOlN1YkNhdGVnb3J5Q291bnQ+CiAgICAgICAgICAgICAgPGF3czpUb3RhbExpc3RpbmdDb3VudD4xODwvYXdzOlRvdGFsTGlzdGluZ0NvdW50PgogICAgICAgICAgICAgIDxhd3M6RGVzY3JpcHRpb24+57q454mM5ri45oiP77yM5q+U5aaC5L2/55So6YOo5YiG44CB5pW05Ymv5oiW5aSa5Ymv5omR5YWL54mM55qE5ri45oiP44CCPC9hd3M6RGVzY3JpcHRpb24+CiAgICAgICAgICAgIDwvYXdzOkNhdGVnb3J5PgogICAgICAgICAgICA8YXdzOkNhdGVnb3J5PgogICAgICAgICAgICAgIDxhd3M6UGF0aD5Ub3AvV29ybGQvxIxlc2t5L0hyeS9LYXJldG7DrV9ocnk8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+Q3plY2g8L2F3czpUaXRsZT4KICAgICAgICAgICAgICA8YXdzOlN1YkNhdGVnb3J5Q291bnQ+MDwvYXdzOlN1YkNhdGVnb3J5Q291bnQ+CiAgICAgICAgICAgICAgPGF3czpUb3RhbExpc3RpbmdDb3VudD40PC9hd3M6VG90YWxMaXN0aW5nQ291bnQ+CiAgICAgICAgICAgIDwvYXdzOkNhdGVnb3J5PgogICAgICAgICAgICA8YXdzOkNhdGVnb3J5PgogICAgICAgICAgICAgIDxhd3M6UGF0aD5Ub3AvV29ybGQvRGFuc2svU3BpbC9Lb3J0c3BpbDwvYXdzOlBhdGg+CiAgICAgICAgICAgICAgPGF3czpUaXRsZT5EYW5pc2g8L2F3czpUaXRsZT4KICAgICAgICAgICAgICA8YXdzOlN1YkNhdGVnb3J5Q291bnQ+NTwvYXdzOlN1YkNhdGVnb3J5Q291bnQ+CiAgICAgICAgICAgICAgPGF3czpUb3RhbExpc3RpbmdDb3VudD4zMjwvYXdzOlRvdGFsTGlzdGluZ0NvdW50PgogICAgICAgICAgICAgIDxhd3M6RGVzY3JpcHRpb24+U3BpbCwgZGVyIHNwaWxsZXMgbWVkIHNwaWxsZWtvcnQsIGjDuHJlciBoamVtbWUgaGVyLjwvYXdzOkRlc2NyaXB0aW9uPgogICAgICAgICAgICA8L2F3czpDYXRlZ29yeT4KICAgICAgICAgICAgPGF3czpDYXRlZ29yeT4KICAgICAgICAgICAgICA8YXdzOlBhdGg+VG9wL1dvcmxkL05lZGVybGFuZHMvU3BlbGxlbi9LYWFydHNwZWxsZW48L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+RHV0Y2g8L2F3czpUaXRsZT4KICAgICAgICAgICAgICA8YXdzOlN1YkNhdGVnb3J5Q291bnQ+NTwvYXdzOlN1YkNhdGVnb3J5Q291bnQ+CiAgICAgICAgICAgICAgPGF3czpUb3RhbExpc3RpbmdDb3VudD44NTwvYXdzOlRvdGFsTGlzdGluZ0NvdW50PgogICAgICAgICAgICAgIDxhd3M6RGVzY3JpcHRpb24+RWVuIG9mIGFuZGVyIHNwZWwgbWV0IGthYXJ0ZW4uPC9hd3M6RGVzY3JpcHRpb24+CiAgICAgICAgICAgIDwvYXdzOkNhdGVnb3J5PgogICAgICAgICAgICA8YXdzOkNhdGVnb3J5PgogICAgICAgICAgICAgIDxhd3M6UGF0aD5Ub3AvV29ybGQvU3VvbWkvUGVsaXQvS29ydHRpcGVsaXQ8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+RmlubmlzaDwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjU8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgICA8YXdzOkRlc2NyaXB0aW9uPktvcnR0aXBlbGlhaWhlaXNpYSBzdW9tZW5raWVsaXNpw6Qgc2l2dXN0b2phLjwvYXdzOkRlc2NyaXB0aW9uPgogICAgICAgICAgICA8L2F3czpDYXRlZ29yeT4KICAgICAgICAgICAgPGF3czpDYXRlZ29yeT4KICAgICAgICAgICAgICA8YXdzOlBhdGg+VG9wL1dvcmxkL0ZyYW7Dp2Fpcy9KZXV4L0pldXhfZGVfY2FydGVzPC9hd3M6UGF0aD4KICAgICAgICAgICAgICA8YXdzOlRpdGxlPkZyZW5jaDwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD42PC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjM0MzwvYXdzOlRvdGFsTGlzdGluZ0NvdW50PgogICAgICAgICAgICAgIDxhd3M6RGVzY3JpcHRpb24+TGVzIGpldXggZGUgY2FydGVzIHNvbnQgw6AgbGEgbW9kZSBkZXB1aXMgbCdhbiAxMDAwIGVudmlyb24uIE9uIGTDqW5vbWJyZSBhY3R1ZWxsZW1lbnQgZGV1eCBncmFuZGVzIGNsYXNzZXMgZGUgY2FydGVzIMOgIGpvdWVyIChxdWkgc29udCBwbGFjw6llcyBkYW5zIGxlcyBjYXTDqWdvcmllcyBPRFAgY29ycmVzcG9uZGFudGVzKSA6ICZsdDt1bCZndDsgJmx0O2xpJmd0O0NhcnRlcyDDoCBjb2xsZWN0aW9ubmVyIDogamV1eCBuw6ljZXNzaXRhbnQgbCdhY3F1aXNpdGlvbiBkJ3VuIGdyYW5kIG5vbWJyZSBkZSBjYXJ0ZXMgcG91ciBqb3VlciAoZXhlbXBsZSB0eXBpcXVlIDogTWFnaWMpOyAmbHQ7bGkmZ3Q7Q2FydGVzIHRyYWRpdGlvbm5lbGxlcyA6IGpldXggbsOpY2Vzc2l0YW50IHVuIG5vbWJyZSBkZSBjYXJ0ZXMgZml4ZXMgKGV4ZW1wbGUgdHlwaXF1ZSA6IGxlIHBva2VyKS4gJmx0Oy91bCZndDsgTG9ycyBkZSB2b3RyZSByZWNoZXJjaGUgZGFucyBjZXR0ZSBjYXTDqWdvcmllIG91IGwndW5lIGRlcyBzb3VzLWNhdMOpZ29yaWVzLCBpbCBlc3QgcG9zc2libGUgcXVlIHRvdXMgbGVzIHNpdGVzIHdlYiB0cmFpdGFudCBkZXMgamV1eCBkZSBjYXJ0ZXMgbmUgc29pZW50IHBhcyBhZmZpY2jDqXMuIENlcyBzaXRlcyBzb250IGNldXggcXVpIHRyYWl0ZW50IGRlcyBqZXV4IGRlIGNhcnRlcyBtYWlzIHBhcyBlbiBleGNsdXNpdml0w6kuIElscyBzb250IGFsb3JzIGluZGV4w6lzIGRhbnMgdW5lIGNhdMOpZ29yaWUgcGFyZW50ZSBjb21tZSBKZXV4LiAmbHQ7YnImZ3Q7ICZsdDticiZndDs8L2F3czpEZXNjcmlwdGlvbj4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9Xb3JsZC9EZXV0c2NoL1NwaWVsZS9CcmV0dC1fdW5kX1Rpc2Noc3BpZWxlL0thcnRlbnNwaWVsZTwvYXdzOlBhdGg+CiAgICAgICAgICAgICAgPGF3czpUaXRsZT5HZXJtYW48L2F3czpUaXRsZT4KICAgICAgICAgICAgICA8YXdzOlN1YkNhdGVnb3J5Q291bnQ+MTE8L2F3czpTdWJDYXRlZ29yeUNvdW50PgogICAgICAgICAgICAgIDxhd3M6VG90YWxMaXN0aW5nQ291bnQ+MTk2PC9hd3M6VG90YWxMaXN0aW5nQ291bnQ+CiAgICAgICAgICAgICAgPGF3czpEZXNjcmlwdGlvbj5LYXJ0ZW5zcGllbGUgc2luZCBhbGxlIFNwaWVsZSwgYmVpIGRlbmVuIGRhcyBwcmltw6RyZSBTcGllbG1hdGVyaWFsIGRpZSBTcGllbGthcnRlbiBzaW5kLiBEYXMgZ2lsdCBzb3dvaGwgZsO8ciByZWluZSBLYXJ0ZW5zcGllbGUgKGJlaW5oYWx0ZW4gbnVyIFNwaWVsa2FydGVuKSBhbHMgYXVjaCBmw7xyIGVyd2VpdGVydGUgS2FydGVuc3BpZWxlIC0gYmVpbmhhbHRlbiB3ZWl0ZXJlIFNwaWVsbWF0ZXJpYWxpZW4gd2llIHouQiBXZXJ0dW5nc2xlaXN0ZSBldGMuLCBkaWUgYWxsZXJkaW5ncyBzcGllbHRlY2huaXNjaCBudXIgdm9uIHVudGVyZ2VvcmRuZXRlciBCZWRldXR1bmcgc2luZC4gSW4gZGVuIGxldHp0ZW4gSmFocnplaG50ZW4gZGVzIDIwLkpoLiBzaW5kIHp1IGRlbiB0cmFkaXRpb25lbGxlbiB1bmQgYmVrYW5udGVuICgmcXVvdDtrbGFzc2lzY2hlbiZxdW90OykgS2FydGVuc3BpZWxlbiB3aWUgei5CLiBTa2F0IHVuZCBCcmlkZ2UgZWluZSBGw7xsbGUgdm9uICZxdW90O21vZGVybmVuJnF1b3Q7IEthcnRlbnNwaWVsZW4gd2llIHouQi4gVU5PIHVuZCBNYWdpYyBoaW56dWdla29tbWVuLjwvYXdzOkRlc2NyaXB0aW9uPgogICAgICAgICAgICA8L2F3czpDYXRlZ29yeT4KICAgICAgICAgICAgPGF3czpDYXRlZ29yeT4KICAgICAgICAgICAgICA8YXdzOlBhdGg+VG9wL1dvcmxkL0l0YWxpYW5vL0dpb2NoaS9DYXJ0ZTwvYXdzOlBhdGg+CiAgICAgICAgICAgICAgPGF3czpUaXRsZT5JdGFsaWFuPC9hd3M6VGl0bGU+CiAgICAgICAgICAgICAgPGF3czpTdWJDYXRlZ29yeUNvdW50PjEyPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjEwOTwvYXdzOlRvdGFsTGlzdGluZ0NvdW50PgogICAgICAgICAgICAgIDxhd3M6RGVzY3JpcHRpb24+U2l0aSBkZWRpY2F0aSBhaSBnaW9jaGkgZGkgY2FydGUgY2hlIHV0aWxpenphbm8gaSBtYXp6aSBzdGFuZGFyZCBkYSA1MiBjYXJ0ZSBvIHF1ZWxsaSB0cmFkaXppb25hbGkgZSBsb2NhbGkgZGkgNDAuIFBlciBpIGdpb2NoaSBjb24gY2FydGUgc2NhbWJpYWJpbGkgZSBjb2xsZXppb25hYmlsaSB2ZWRpOiBHaW9jaGk6R2lvY2hpX2RpX0NhcnRlX0NvbGxlemlvbmFiaWxpLiBQZXIgaSBnaW9jaGkgb25saW5lIHZlZGk6IEdpb2NoaTpXZWIuPC9hd3M6RGVzY3JpcHRpb24+CiAgICAgICAgICAgIDwvYXdzOkNhdGVnb3J5PgogICAgICAgICAgICA8YXdzOkNhdGVnb3J5PgogICAgICAgICAgICAgIDxhd3M6UGF0aD5Ub3AvV29ybGQvSmFwYW5lc2Uv44Ky44O844OgL+ODhuODvOODluODq+OCsuODvOODoC/jgqvjg7zjg4njgrLjg7zjg6A8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+SmFwYW5lc2U8L2F3czpUaXRsZT4KICAgICAgICAgICAgICA8YXdzOlN1YkNhdGVnb3J5Q291bnQ+MjwvYXdzOlN1YkNhdGVnb3J5Q291bnQ+CiAgICAgICAgICAgICAgPGF3czpUb3RhbExpc3RpbmdDb3VudD4xOTwvYXdzOlRvdGFsTGlzdGluZ0NvdW50PgogICAgICAgICAgICAgIDxhd3M6RGVzY3JpcHRpb24+44Kr44O844OJ44Ky44O844Og44Gr6Zai44GZ44KL44K144Kk44OI44KS5omx44GE44G+44GZ44CCPC9hd3M6RGVzY3JpcHRpb24+CiAgICAgICAgICAgIDwvYXdzOkNhdGVnb3J5PgogICAgICAgICAgICA8YXdzOkNhdGVnb3J5PgogICAgICAgICAgICAgIDxhd3M6UGF0aD5Ub3AvV29ybGQvS29yZWFuL+qyjOyehC/subTrk5zqsozsnoQ8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+S29yZWFuPC9hd3M6VGl0bGU+CiAgICAgICAgICAgICAgPGF3czpTdWJDYXRlZ29yeUNvdW50PjA8L2F3czpTdWJDYXRlZ29yeUNvdW50PgogICAgICAgICAgICAgIDxhd3M6VG90YWxMaXN0aW5nQ291bnQ+MDwvYXdzOlRvdGFsTGlzdGluZ0NvdW50PgogICAgICAgICAgICA8L2F3czpDYXRlZ29yeT4KICAgICAgICAgICAgPGF3czpDYXRlZ29yeT4KICAgICAgICAgICAgICA8YXdzOlBhdGg+VG9wL1dvcmxkL0xpZXR1dmnFsy/FvWFpZGltYWkvS29ydMWzX8W+YWlkaW1haTwvYXdzOlBhdGg+CiAgICAgICAgICAgICAgPGF3czpUaXRsZT5MaWV0dXZpxbM8L2F3czpUaXRsZT4KICAgICAgICAgICAgICA8YXdzOlN1YkNhdGVnb3J5Q291bnQ+MDwvYXdzOlN1YkNhdGVnb3J5Q291bnQ+CiAgICAgICAgICAgICAgPGF3czpUb3RhbExpc3RpbmdDb3VudD4wPC9hd3M6VG90YWxMaXN0aW5nQ291bnQ+CiAgICAgICAgICAgICAgPGF3czpEZXNjcmlwdGlvbj7FvWFpZGltYWkga29ydG9taXMsIGrFsyB0YWlzeWtsxJdzLCBzdHJhdGVnaWphIGlyIGtsdWJhaS48L2F3czpEZXNjcmlwdGlvbj4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9Xb3JsZC9Ob3Jzay9TcGlsbC9Lb3J0c3BpbGw8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+Tm9yd2VnaWFuPC9hd3M6VGl0bGU+CiAgICAgICAgICAgICAgPGF3czpTdWJDYXRlZ29yeUNvdW50PjE8L2F3czpTdWJDYXRlZ29yeUNvdW50PgogICAgICAgICAgICAgIDxhd3M6VG90YWxMaXN0aW5nQ291bnQ+MzI8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgICA8YXdzOkRlc2NyaXB0aW9uPktvcnRzcGlsbCBvbWZhdHRlciBiw6VkZSBzcGlsbCBtZWQga2xhc3Npc2sga29ydHN0b2trLCBzb20gYnJpZGdlIG9nIHBva2VyLCBzYW1sZWtvcnRzcGlsbCBzb20gTWFnaWMgb2cgUG9rZW1vbiwgb2cgc3BpbGwgbWVkIGFuZHJlIHR5cGVyIGtvcnRzdG9ra2VyLiBLb3J0c3BpbGwgb3ZlciBpbnRlcm5ldHQgZGVra2VzIGF2IGthdGVnb3JpZW4gJmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmRtb3oub3JnL1dvcmxkL05vcnNrL1NwaWxsL0ludGVybmV0dC8mcXVvdDsmZ3Q7SW50ZXJuZXR0Jmx0Oy9hJmd0Oy48L2F3czpEZXNjcmlwdGlvbj4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9Xb3JsZC9Qb2xza2kvR3J5L0thcmNpYW5lPC9hd3M6UGF0aD4KICAgICAgICAgICAgICA8YXdzOlRpdGxlPlBvbGlzaDwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4xPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50Pjg8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9Xb3JsZC9Sb23Dom7Egy9Kb2N1cmkvSm9jdXJpX2RlX2PEg3LFo2k8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+Um9tYW5pYW48L2F3czpUaXRsZT4KICAgICAgICAgICAgICA8YXdzOlN1YkNhdGVnb3J5Q291bnQ+MDwvYXdzOlN1YkNhdGVnb3J5Q291bnQ+CiAgICAgICAgICAgICAgPGF3czpUb3RhbExpc3RpbmdDb3VudD4yPC9hd3M6VG90YWxMaXN0aW5nQ291bnQ+CiAgICAgICAgICAgICAgPGF3czpEZXNjcmlwdGlvbj5QYWdpbmkgw65uIGxpbWJhIHJvbcOibsSDIGRlZGljYXRlIGpvY3VyaWxvciBkZSBjxINyxaNpLiAmbHQ7cCZndDtFc3RlIGluZGljYXTEgyBvIGRlc2NyaWVyZSDDrm4gbGltYmEgcm9tw6JuxIMgYSBwYWdpbmlpIHByb3B1c2UuJmx0Oy9wJmd0OyZsdDtoNCZndDtEYWPEgyBwYWdpbmEgbnUgZXN0ZSDDrm4gbGltYmEgcm9tw6JuxIMgYWNlYXN0xIMgY2F0ZWdvcmllIG51IGVzdGUgcmVjb21hbmRhdMSDLiZsdDsvaDQmZ3Q7PC9hd3M6RGVzY3JpcHRpb24+CiAgICAgICAgICAgIDwvYXdzOkNhdGVnb3J5PgogICAgICAgICAgICA8YXdzOkNhdGVnb3J5PgogICAgICAgICAgICAgIDxhd3M6UGF0aD5Ub3AvV29ybGQvUnVzc2lhbi/QmNCz0YDRiy/QmtCw0YDRgtC+0YfQvdGL0LVf0LjQs9GA0Ys8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+UnVzc2lhbjwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4xPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjE2PC9hd3M6VG90YWxMaXN0aW5nQ291bnQ+CiAgICAgICAgICAgIDwvYXdzOkNhdGVnb3J5PgogICAgICAgICAgICA8YXdzOkNhdGVnb3J5PgogICAgICAgICAgICAgIDxhd3M6UGF0aD5Ub3AvV29ybGQvU2xvdmVuc2t5L0hyeS9LYXJ0b3bDqV9ocnk8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+U2xvdmVuc2t5PC9hd3M6VGl0bGU+CiAgICAgICAgICAgICAgPGF3czpTdWJDYXRlZ29yeUNvdW50PjA8L2F3czpTdWJDYXRlZ29yeUNvdW50PgogICAgICAgICAgICAgIDxhd3M6VG90YWxMaXN0aW5nQ291bnQ+MzwvYXdzOlRvdGFsTGlzdGluZ0NvdW50PgogICAgICAgICAgICA8L2F3czpDYXRlZ29yeT4KICAgICAgICAgICAgPGF3czpDYXRlZ29yeT4KICAgICAgICAgICAgICA8YXdzOlBhdGg+VG9wL1dvcmxkL0VzcGHDsW9sL0p1ZWdvcy9DYXJ0YXM8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+U3BhbmlzaDwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD41PC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjI2PC9hd3M6VG90YWxMaXN0aW5nQ291bnQ+CiAgICAgICAgICAgICAgPGF3czpEZXNjcmlwdGlvbj5TaXRpb3Mgd2ViIHNvYnJlIGp1ZWdvcyBlbiBsb3MgcXVlIGludGVydmllbmVuIGxhcyBjYXJ0YXMgY29tbyBlbGVtZW50byBkZSBhemFyLjwvYXdzOkRlc2NyaXB0aW9uPgogICAgICAgICAgICA8L2F3czpDYXRlZ29yeT4KICAgICAgICAgICAgPGF3czpDYXRlZ29yeT4KICAgICAgICAgICAgICA8YXdzOlBhdGg+VG9wL1dvcmxkL1N2ZW5za2EvU3BlbC9Lb3J0c3BlbDwvYXdzOlBhdGg+CiAgICAgICAgICAgICAgPGF3czpUaXRsZT5Td2VkaXNoPC9hd3M6VGl0bGU+CiAgICAgICAgICAgICAgPGF3czpTdWJDYXRlZ29yeUNvdW50PjE8L2F3czpTdWJDYXRlZ29yeUNvdW50PgogICAgICAgICAgICAgIDxhd3M6VG90YWxMaXN0aW5nQ291bnQ+NDQ8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgICA8YXdzOkRlc2NyaXB0aW9uPkFsbGEgc2xhZ3Mga29ydHNwZWwuIMOEdmVuIGtvcnRzcGVsIG1lZCBzcGVjaWFsbGVrYXIuIFNpZG9yIG9tIHNwZWwgbWVkIHN0YW5kYXJka29ydGxla2FyLCB0IGV4IGJyaWRnZSBvY2ggdmlyYSwgc2thIGzDpGdnYXMgaSB1bmRlcmthdGVnb3JpLjwvYXdzOkRlc2NyaXB0aW9uPgogICAgICAgICAgICA8L2F3czpDYXRlZ29yeT4KICAgICAgICAgICAgPGF3czpDYXRlZ29yeT4KICAgICAgICAgICAgICA8YXdzOlBhdGg+VG9wL1dvcmxkL1TDvHJrw6dlL095dW5sYXIvS2FydF9PeXVubGFyxLE8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+VHVya2lzaDwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4xPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjE3PC9hd3M6VG90YWxMaXN0aW5nQ291bnQ+CiAgICAgICAgICAgICAgPGF3czpEZXNjcmlwdGlvbj5LYXJ0IG95dW5sYXLEsSBoYWtrxLFuZGEgYmlsZ2ksIHN0cmF0ZWppIHZlIGt1cmFsbGFyIGnDp2VyZW4gc2l0ZWxlciBidSBrYXRlZ29yaWRlIGxpc3RlbGVuaXIuPC9hd3M6RGVzY3JpcHRpb24+CiAgICAgICAgICAgIDwvYXdzOkNhdGVnb3J5PgogICAgICAgICAgPC9hd3M6TGFuZ3VhZ2VDYXRlZ29yaWVzPgogICAgICAgICAgPGF3czpSZWxhdGVkQ2F0ZWdvcmllcz4KICAgICAgICAgICAgPGF3czpDYXRlZ29yeT4KICAgICAgICAgICAgICA8YXdzOlBhdGg+VG9wL0FydHMvUGVyZm9ybWluZ19BcnRzL01hZ2ljL0VmZmVjdHMvQ2FyZDwvYXdzOlBhdGg+CiAgICAgICAgICAgICAgPGF3czpUaXRsZT5DYXJkPC9hd3M6VGl0bGU+CiAgICAgICAgICAgICAgPGF3czpTdWJDYXRlZ29yeUNvdW50PjA8L2F3czpTdWJDYXRlZ29yeUNvdW50PgogICAgICAgICAgICAgIDxhd3M6VG90YWxMaXN0aW5nQ291bnQ+MzwvYXdzOlRvdGFsTGlzdGluZ0NvdW50PgogICAgICAgICAgICA8L2F3czpDYXRlZ29yeT4KICAgICAgICAgICAgPGF3czpDYXRlZ29yeT4KICAgICAgICAgICAgICA8YXdzOlBhdGg+VG9wL1JlY3JlYXRpb24vQ29sbGVjdGluZy9Ub3lzL0dhbWVzL1BsYXlpbmdfQ2FyZHM8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+Q29sbGVjdGluZzwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4xPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjEzPC9hd3M6VG90YWxMaXN0aW5nQ291bnQ+CiAgICAgICAgICAgICAgPGF3czpEZXNjcmlwdGlvbj5Pcmdhbml6YXRpb25zIGRlZGljYXRlZCB0byB0aGUgaG9iYnkgb2YgY29sbGVjdGluZyBwbGF5aW5nIGNhcmRzLCBpbmNsdWRpbmcgdGFyb3QgY2FyZHMuPC9hd3M6RGVzY3JpcHRpb24+CiAgICAgICAgICAgIDwvYXdzOkNhdGVnb3J5PgogICAgICAgICAgICA8YXdzOkNhdGVnb3J5PgogICAgICAgICAgICAgIDxhd3M6UGF0aD5Ub3AvR2FtZXMvVmlkZW9fR2FtZXMvUmVjcmVhdGlvbi9Ccm93c2VyX0Jhc2VkL0NhcmRzPC9hd3M6UGF0aD4KICAgICAgICAgICAgICA8YXdzOlRpdGxlPk9ubGluZTwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4yMTwvYXdzOlN1YkNhdGVnb3J5Q291bnQ+CiAgICAgICAgICAgICAgPGF3czpUb3RhbExpc3RpbmdDb3VudD40NTwvYXdzOlRvdGFsTGlzdGluZ0NvdW50PgogICAgICAgICAgICAgIDxhd3M6RGVzY3JpcHRpb24+VGhpcyBjYXRlZ29yeSBpcyByZXN0cmljdGVkIHRvIGNhcmQgZ2FtZXMsIHNvbGl0YWlyZSBvciBtdWx0aS1wbGF5ZXIsIHdoaWNoIGNhbiBiZSBwbGF5ZWQgb25saW5lIHdpdGhvdXQgZG93bmxvYWRpbmcgc29mdHdhcmUuPC9hd3M6RGVzY3JpcHRpb24+CiAgICAgICAgICAgIDwvYXdzOkNhdGVnb3J5PgogICAgICAgICAgICA8YXdzOkNhdGVnb3J5PgogICAgICAgICAgICAgIDxhd3M6UGF0aD5Ub3AvR2FtZXMvR2FtYmxpbmcvRXF1aXBtZW50L01hbnVmYWN0dXJlcnMvUGxheWluZ19DYXJkczwvYXdzOlBhdGg+CiAgICAgICAgICAgICAgPGF3czpUaXRsZT5QbGF5aW5nIENhcmRzPC9hd3M6VGl0bGU+CiAgICAgICAgICAgICAgPGF3czpTdWJDYXRlZ29yeUNvdW50PjA8L2F3czpTdWJDYXRlZ29yeUNvdW50PgogICAgICAgICAgICAgIDxhd3M6VG90YWxMaXN0aW5nQ291bnQ+NzwvYXdzOlRvdGFsTGlzdGluZ0NvdW50PgogICAgICAgICAgICAgIDxhd3M6RGVzY3JpcHRpb24+QnVzaW5lc3NlcyB3aG9zZSBleGNsdXNpdmUgb3IgcHJlZG9taW5hbnQgZm9jdXMgaXMgdGhlIG1hbnVmYWN0dXJpbmcgb2YgcGxheWluZyBjYXJkcy48L2F3czpEZXNjcmlwdGlvbj4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9SZWNyZWF0aW9uL0NvbGxlY3RpbmcvVG95cy9HYW1lcy9QbGF5aW5nX0NhcmRzPC9hd3M6UGF0aD4KICAgICAgICAgICAgICA8YXdzOlRpdGxlPlBsYXlpbmcgQ2FyZHM8L2F3czpUaXRsZT4KICAgICAgICAgICAgICA8YXdzOlN1YkNhdGVnb3J5Q291bnQ+MTwvYXdzOlN1YkNhdGVnb3J5Q291bnQ+CiAgICAgICAgICAgICAgPGF3czpUb3RhbExpc3RpbmdDb3VudD4xMzwvYXdzOlRvdGFsTGlzdGluZ0NvdW50PgogICAgICAgICAgICAgIDxhd3M6RGVzY3JpcHRpb24+T3JnYW5pemF0aW9ucyBkZWRpY2F0ZWQgdG8gdGhlIGhvYmJ5IG9mIGNvbGxlY3RpbmcgcGxheWluZyBjYXJkcywgaW5jbHVkaW5nIHRhcm90IGNhcmRzLjwvYXdzOkRlc2NyaXB0aW9uPgogICAgICAgICAgICA8L2F3czpDYXRlZ29yeT4KICAgICAgICAgICAgPGF3czpDYXRlZ29yeT4KICAgICAgICAgICAgICA8YXdzOlBhdGg+VG9wL1Nob3BwaW5nL1RveXNfYW5kX0dhbWVzL0dhbWVzL0NhcmRzPC9hd3M6UGF0aD4KICAgICAgICAgICAgICA8YXdzOlRpdGxlPlNob3BwaW5nPC9hd3M6VGl0bGU+CiAgICAgICAgICAgICAgPGF3czpTdWJDYXRlZ29yeUNvdW50PjI8L2F3czpTdWJDYXRlZ29yeUNvdW50PgogICAgICAgICAgICAgIDxhd3M6VG90YWxMaXN0aW5nQ291bnQ+MjU8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9UcmFkaW5nX0NhcmRfR2FtZXM8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+VHJhZGluZyBDYXJkczwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD43MDwvYXdzOlN1YkNhdGVnb3J5Q291bnQ+CiAgICAgICAgICAgICAgPGF3czpUb3RhbExpc3RpbmdDb3VudD4yMzE8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgICA8YXdzOkRlc2NyaXB0aW9uPlRoaXMgY2F0ZWdvcnkgY292ZXJzIGFsbCBjb2xsZWN0aWJsZSBjYXJkIGdhbWVzIChrbm93biBhcyBDQ0dzKSBzdWNoIGFzIE1hZ2ljLCBNeXRob3MsIFN0YXIgV2FycywgZXRjLiBJdCBhbHNvIGluY2x1ZGVzIGdhbWVzIG9mIGEgc2ltaWxhciBuYXR1cmUsIGV2ZW4gaWYgdGhleSBhcmVuJ3Qgc3RyaWN0bHkgc3BlYWtpbmcgY29sbGVjdGlibGUgLSBYWFhlbm9waGlsZSwgdGhlIG5ld2VyIElOV08gZXhwYW5zaW9ucywgZXRjLiBBcyBhIHJ1bGUgb2YgdGh1bWIsIGFueSBnYW1lIHRoYXQgaW52b2x2ZXMgcHJvZmVzc2lvbmFsbHktcHJpbnRlZCBjYXJkcyAoaS5lLiBub3Qgc3RhbmRhcmQgcGxheWluZyBjYXJkcykgc2hvdWxkIGJlIGluIGhlcmUuPC9hd3M6RGVzY3JpcHRpb24+CiAgICAgICAgICAgIDwvYXdzOkNhdGVnb3J5PgogICAgICAgICAgICA8YXdzOkNhdGVnb3J5PgogICAgICAgICAgICAgIDxhd3M6UGF0aD5Ub3AvR2FtZXMvVmlkZW9fR2FtZXMvUmVjcmVhdGlvbi9DYXJkczwvYXdzOlBhdGg+CiAgICAgICAgICAgICAgPGF3czpUaXRsZT5WaWRlbyBHYW1lczwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4xNjwvYXdzOlN1YkNhdGVnb3J5Q291bnQ+CiAgICAgICAgICAgICAgPGF3czpUb3RhbExpc3RpbmdDb3VudD4xMTQ8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgICA8YXdzOkRlc2NyaXB0aW9uPlRoaXMgY2F0ZWdvcnkgYW5kIGl0cyBzdWJjYXRlZ29yaWVzIGFyZSBmb3IgZG93bmxvYWRhYmxlIG9yIENEL0RWRCBzb2Z0d2FyZSBjYXJkIGdhbWVzIHBsYXlhYmxlIG9uIGEgY29tcHV0ZXIuPC9hd3M6RGVzY3JpcHRpb24+CiAgICAgICAgICAgIDwvYXdzOkNhdGVnb3J5PgogICAgICAgICAgPC9hd3M6UmVsYXRlZENhdGVnb3JpZXM+CiAgICAgICAgICA8YXdzOkxldHRlckJhcnM+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzLzA8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+MDwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzLzE8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+MTwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzLzI8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+MjwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzLzM8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+MzwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzLzQ8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+NDwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzLzU8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+NTwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzLzY8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+NjwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzLzc8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+NzwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzLzg8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+ODwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzLzk8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+OTwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL0E8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+QTwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL0I8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+QjwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL0M8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+QzwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL0Q8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+RDwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL0U8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+RTwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL0Y8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+RjwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL0c8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+RzwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL0g8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+SDwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL0k8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+STwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL0o8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+SjwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL0s8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+SzwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL0w8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+TDwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL008L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+TTwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL048L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+TjwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL088L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+TzwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL1A8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+UDwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL1E8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+UTwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL1I8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+UjwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL1M8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+UzwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL1Q8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+VDwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL1U8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+VTwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL1Y8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+VjwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL1c8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+VzwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL1g8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+WDwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL1k8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+WTwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgIDxhd3M6Q2F0ZWdvcnk+CiAgICAgICAgICAgICAgPGF3czpQYXRoPlRvcC9HYW1lcy9DYXJkX0dhbWVzL1o8L2F3czpQYXRoPgogICAgICAgICAgICAgIDxhd3M6VGl0bGU+WjwvYXdzOlRpdGxlPgogICAgICAgICAgICAgIDxhd3M6U3ViQ2F0ZWdvcnlDb3VudD4wPC9hd3M6U3ViQ2F0ZWdvcnlDb3VudD4KICAgICAgICAgICAgICA8YXdzOlRvdGFsTGlzdGluZ0NvdW50PjA8L2F3czpUb3RhbExpc3RpbmdDb3VudD4KICAgICAgICAgICAgPC9hd3M6Q2F0ZWdvcnk+CiAgICAgICAgICA8L2F3czpMZXR0ZXJCYXJzPgogICAgICAgIDwvYXdzOkNhdGVnb3J5QnJvd3NlPgogICAgICA8L2F3czpBbGV4YT4KICAgIDwvYXdzOkNhdGVnb3J5QnJvd3NlUmVzdWx0PgogICAgPGF3czpSZXNwb25zZVN0YXR1cyB4bWxuczphd3M9Imh0dHA6Ly9hbGV4YS5hbWF6b25hd3MuY29tL2RvYy8yMDA1LTEwLTA1LyI+CiAgICAgIDxhd3M6U3RhdHVzQ29kZT5TdWNjZXNzPC9hd3M6U3RhdHVzQ29kZT4KICAgIDwvYXdzOlJlc3BvbnNlU3RhdHVzPgogIDwvYXdzOlJlc3BvbnNlPgo8L2F3czpDYXRlZ29yeUJyb3dzZVJlc3BvbnNlPgo=
    http_version: 
  recorded_at: Sat, 05 May 2018 21:58:32 GMT
recorded_with: VCR 4.0.0
